bool isValid(char * s){
char stack[10000];
int top=-1;

while(*s!='\0')
{
    if(*s=='(' ||*s=='['||*s=='{' )
        stack[++top]=*s;
    else if(*s==')'){
        if(top==-1||stack[top]!='(')
            return false;
        else
            top--;
    }
     else if(*s==']'){
        if(top==-1||stack[top]!='[')
            return false;
        else
            top--;
    }
     else if(*s=='}'){
        if(top==-1||stack[top]!='{')
            return false;
        else
            top--;
    }
    
    s++;
}

if(top!=-1)
    return false;
else
return true;
}


/* logic is quite simple as when you encounter a open parenthesis you have to push that into stack and when same kind's close parenthesis is found you have to pop it out of stack*/

// BY Rama Subramanian
